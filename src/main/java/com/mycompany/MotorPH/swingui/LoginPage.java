/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.MotorPH.swingui;

import java.awt.Image;
import javax.swing.ImageIcon;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import java.util.logging.Logger;
import java.util.logging.Level;

/**
 *
 * @author harvey punsalan
 */
public class LoginPage extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(LoginPage.class.getName());
    private final String ADMIN_FILE = "/Admin.txt";
    private final String NON_ADMIN_FILE = "/NonAdmin.txt";

    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("MotorPH - Login");
        
        ImageIcon icon = new ImageIcon(getClass().getResource("/icons/MotorPHLoginImage.png"));
        Image scaledImage = icon.getImage().getScaledInstance(
            jLabelImage.getWidth(),
            jLabelImage.getHeight(),
            Image.SCALE_SMOOTH
        );
        jLabelImage.setIcon(new ImageIcon(scaledImage));
        
        // To Add action listener to the login button
        jButtontoLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtontoLoginActionPerformed(evt);
            }
        });
        
        // To Add Enter key functionality to password field
        jPasswordFieldinputPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtontoLoginActionPerformed(evt);
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1userName = new javax.swing.JLabel();
        jLabelpassword = new javax.swing.JLabel();
        jTextFieldinputUserName = new javax.swing.JTextField();
        jButtontoLogin = new javax.swing.JButton();
        jPasswordFieldinputPassword = new javax.swing.JPasswordField();
        jLabelImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1userName.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1userName.setText("Username:");

        jLabelpassword.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabelpassword.setText("Password:");

        jButtontoLogin.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jButtontoLogin.setText("Login");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1userName)
                            .addComponent(jLabelpassword))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldinputUserName)
                            .addComponent(jPasswordFieldinputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jButtontoLogin)))
                .addGap(43, 43, 43))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1userName)
                    .addComponent(jTextFieldinputUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelpassword)
                    .addComponent(jPasswordFieldinputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jButtontoLogin)
                .addGap(74, 74, 74))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtontoLoginActionPerformed(java.awt.event.ActionEvent evt) {                                               
    String username = jTextFieldinputUserName.getText().trim();
    String password = new String(jPasswordFieldinputPassword.getPassword()).trim();
    
    if (username.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter both username and password.", 
                                    "Login Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    String userRole = authenticateUser(username, password);
    if (userRole != null) {
        JOptionPane.showMessageDialog(this, "Login successful! Welcome to MotorPH.", 
                                    "Success", JOptionPane.INFORMATION_MESSAGE);
        
        // Clear the fields after successful login
        jTextFieldinputUserName.setText("");
        jPasswordFieldinputPassword.setText("");
        
        // Store reference to current login window
        final LoginPage currentLoginPage = this;
        final String role = userRole;
        
        // This is to launch the main application window with user role
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    MotorPHAppSwing mainApp = new MotorPHAppSwing();
                    // You can pass the role to the main app if needed
                    // mainApp.setUserRole(role);
                    mainApp.setVisible(true);
                    
                    // This properly closes the login window
                    currentLoginPage.dispose(); 
                    
                } catch (Exception e) {
                    logger.log(Level.SEVERE, "Error launching main application", e);
                    JOptionPane.showMessageDialog(null, "Error launching application: " + e.getMessage());
             
                    currentLoginPage.setVisible(true); // Just in case to make login visible again if main app fails
                }
            }
        });
    } else {
        JOptionPane.showMessageDialog(this, "Invalid username or password. Access denied.", 
                                    "Login Failed", JOptionPane.ERROR_MESSAGE);
        
        // Clear the password field for security
        jPasswordFieldinputPassword.setText("");
    }
}                                              
    
    /**
     * Authenticates user and returns their role (Admin/NonAdmin) or null if authentication fails
     */
    private String authenticateUser(String username, String password) {
        // Check admin credentials first
        if (checkCredentialsInFile(ADMIN_FILE, username, password)) {
            return "Admin";
        }
        
        // Check non-admin credentials
        if (checkCredentialsInFile(NON_ADMIN_FILE, username, password)) {
            return "NonAdmin";
        }
        
        return null; // Authentication failed
    }
    
    /**
     * Checks credentials in the specified resource file
     */
    private boolean checkCredentialsInFile(String resourcePath, String username, String password) {
        try {
             InputStream inputStream = getClass().getResourceAsStream(resourcePath);
               if (inputStream == null) {
                  logger.log(Level.WARNING, "Credentials file not found: " + resourcePath);
            return false;
        }
        
        try (BufferedReader br = new BufferedReader(new InputStreamReader(inputStream))) {
            String line;
            while ((line = br.readLine()) != null) {
                line = line.trim();
                if (line.isEmpty() || line.startsWith("#")) {
                    continue; // Skip empty lines and comments
                }
                
                String[] credentials = line.split(",");
                if (credentials.length >= 2) {
                    String fileUsername = credentials[0].trim();
                    String filePassword = credentials[1].trim();
                    
                    if (fileUsername.equals(username) && filePassword.equals(password)) {
                        return true;
                    }
                }
            }
        }
    } catch (IOException e) {
        logger.log(Level.WARNING, "Error reading credentials file: " + resourcePath, e);
        JOptionPane.showMessageDialog(this, "Error accessing login credentials. Please contact system administrator.", 
                                    "System Error", JOptionPane.ERROR_MESSAGE);
    }
    return false;
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtontoLogin;
    private javax.swing.JLabel jLabel1userName;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JLabel jLabelpassword;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordFieldinputPassword;
    private javax.swing.JTextField jTextFieldinputUserName;
    // End of variables declaration//GEN-END:variables
}
