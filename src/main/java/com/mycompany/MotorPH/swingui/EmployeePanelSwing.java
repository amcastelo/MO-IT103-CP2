     /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.MotorPH.swingui;

import com.mycompany.MotorPH.EmployeeFileManager;
import java.awt.Component;
import java.util.Arrays;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author adamm
 */
public class EmployeePanelSwing extends javax.swing.JPanel {
    private EmployeePanelListener employeePanelListener;
    private EmployeeFileManager employeeFileManager;
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>();
    
    /**
     * Creates new form EmployeePanel
     * @param employeeFileManager
     */
    public EmployeePanelSwing(EmployeeFileManager employeeFileManager) {
        this.employeeFileManager = employeeFileManager;
    initComponents();

    // Defer table setup until GUI is fully loaded
    SwingUtilities.invokeLater(() -> {
        initializeEmpTable(); // THIS NOW WORKS
    });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        empTable = new javax.swing.JTable();
        ReloadButton = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        viewButton = new javax.swing.JButton();
        newEmployeeButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(744, 600));

        empTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        empTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(empTable);

        ReloadButton.setText("Reload");
        ReloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReloadButtonActionPerformed(evt);
            }
        });

        searchField.setToolTipText("");

        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        newEmployeeButton.setText("New Employee");
        newEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newEmployeeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(viewButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ReloadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(118, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReloadButton)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewButton)
                    .addComponent(newEmployeeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // RELOADS JTABLE
    private void ReloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReloadButtonActionPerformed
        employeeFileManager.loadSelectedIdentifiersToSwing(empTable);
    }//GEN-LAST:event_ReloadButtonActionPerformed
    
    // SET LISTENER FOR PASSING ACTION
    public void setEmployeeDataListener(EmployeePanelListener listener) {
        this.employeePanelListener = listener;
    }
    
    // VIEWS EMPLOYEES FULL DETAILS
    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        int selectedRow = empTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row first.");
            return;
        }

        // Get the Employee # value from the selected row
        Object empNumObj = empTable.getValueAt(selectedRow, 0); // Assuming column 0 is "Employee #"
        if (empNumObj == null) {
            JOptionPane.showMessageDialog(this, "Employee # not found in selected row.");
            return;
        }
        String empNum = empNumObj.toString().trim();

        // Find the corresponding full row from cachedCSVData
        List<String> matchingRow = null;
        for (List<String> row : employeeFileManager.cachedCSVData) {
            if (!row.isEmpty() && row.get(0).trim().equals(empNum)) { // Assuming index 0 is also Employee #
                matchingRow = row;
                break;
            }
        }

        if (matchingRow != null) {
            String[] rowData = matchingRow.toArray(new String[0]);
            if (employeePanelListener != null) {
                employeePanelListener.onEmployeeDataSelected(rowData);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Full data for selected employee not found.");
        }
    }//GEN-LAST:event_viewButtonActionPerformed
    
    // CREATE A NEW EMPLOYEE, AN EMPLOYEE CREATION FORM OPEN
    private void newEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeButtonActionPerformed
        NewEmployeeForm dialog = new NewEmployeeForm((JFrame) SwingUtilities.getWindowAncestor(this), true);
        dialog.setVisible(true); 

        // After dialog closes, reload the file and refresh JTable from cache
        refreshEmployeeTable();
    }//GEN-LAST:event_newEmployeeButtonActionPerformed
    
    // VALIDATES IF A ROW IS SELECTED
    public static int getSelectedRowOrShowMessage(JTable table, Component parentComponent) {
        int selectedRow = table.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(parentComponent, "Please select a row.");
            }
        return selectedRow;
    }      
    
    // INITIALIZER FOR EMPLOYEE TABLE
    private void initializeEmpTable() {
        refreshEmployeeTable();
        
        searchField.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) { search(); }
            public void removeUpdate(DocumentEvent e) { search(); }
            public void changedUpdate(DocumentEvent e) { search(); }

            private void search() {
                String text = searchField.getText();
                if (text.trim().isEmpty()) {
                    sorter.setRowFilter(null);
                } else {
                    employeeFileManager.filterByEmployeeID(empTable, sorter, text);
                }
            }
        });
    }
    
    public void refreshEmployeeTable() {
        employeeFileManager.loadFile();
        employeeFileManager.loadSelectedIdentifiersToSwing(empTable);
        sorter = new TableRowSorter<>((DefaultTableModel) empTable.getModel());
        empTable.setRowSorter(sorter);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ReloadButton;
    private javax.swing.JTable empTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newEmployeeButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables

    /**
     * @param empTable the empTable to set
     */
    public void setEmpTable(JTable empTable) {
        this.empTable = empTable;
    }   
}
